---
## Author
author:
  name: Mohamed Musa
  student_number: "1032248286"
  group: "НКАбд-05"
  year: "2 год"
  email: "1032248286@pfur.ru"
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 19

## Title
title: "Лабораторная работа №7"
subtitle: "Работа с командами cp, mv и chmod в Linux"
license: "CC BY"
---

# Цель работы

Углубить знания работы с командной строкой Linux путем изучения и практического применения команд копирования файлов (`cp`), перемещения/переименования файлов (`mv`) и управления правами доступа (`chmod`).

# Задание

1. Изучить синтаксис и основные опции команды `cp` (копирование файлов)
2. Освоить команду `mv` для перемещения и переименования файлов
3. Изучить систему прав доступа в Linux
4. Практиковать использование команды `chmod` для изменения прав доступа
5. Выполнить практические упражнения с данными командами

# Теоретическое введение

## Команда cp (copy)

Команда `cp` используется для копирования файлов и директорий в Linux.

**Основной синтаксис:**
```bash
cp [опции] источник назначение
```

**Основные опции:**

- `-r` или `-R` — рекурсивное копирование директорий
- `-i` — интерактивный режим (запрос перед перезаписью)
- `-v` — подробный вывод (показывает, что копируется)
- `-p` — сохранение атрибутов файла (права, владелец, временные метки)
- `-u` — копирование только новых или измененных файлов

## Команда mv (move)

Команда `mv` используется для перемещения и переименования файлов и директорий.

**Основной синтаксис:**
```bash
mv [опции] источник назначение
```

**Основные опции:**

- `-i` — интерактивный режим (запрос перед перезаписью)
- `-v` — подробный вывод
- `-f` — принудительное перемещение без запросов
- `-n` — не перезаписывать существующие файлы
- `-u` — перемещать только новые или измененные файлы

## Команда chmod (change mode)

Команда `chmod` используется для изменения прав доступа к файлам и директориям.

**Система прав доступа в Linux:**

Права доступа состоят из трех групп:
- **Владелец (user)** — пользователь, создавший файл
- **Группа (group)** — группа пользователей
- **Остальные (others)** — все остальные пользователи

Каждая группа имеет три типа прав:
- **r (read)** — чтение (4)
- **w (write)** — запись (2)
- **x (execute)** — выполнение (1)

**Числовое представление:**
- `7` (rwx) = 4 + 2 + 1 — все права
- `6` (rw-) = 4 + 2 — чтение и запись
- `5` (r-x) = 4 + 1 — чтение и выполнение
- `4` (r--) = 4 — только чтение

**Примеры:**
- `chmod 755 file` — rwxr-xr-x (владелец: все права, остальные: чтение и выполнение)
- `chmod 644 file` — rw-r--r-- (владелец: чтение и запись, остальные: только чтение)

**Символьное представление:**
```bash
chmod u+x file    # добавить право выполнения владельцу
chmod g-w file    # убрать право записи у группы
chmod o=r file    # установить только чтение для остальных
chmod a+r file    # добавить право чтения всем
```

# Выполнение лабораторной работы

## Задания 1-3: Работа с командами cp и mv

На рисунке @fig-commands1 показано выполнение первых трех заданий, включающих:

- Копирование файлов с помощью команды `cp`
- Использование различных опций команды `cp` (например, `-r` для рекурсивного копирования)
- Перемещение файлов с помощью команды `mv`
- Переименование файлов

![Выполнение заданий 1-3: команды cp и mv](image/commands1.png){#fig-commands1 width=80%}

## Задания 3-4: Продолжение работы с mv и введение в chmod

На рисунке @fig-commands2 показано выполнение заданий 3-4:

- Дополнительные операции перемещения файлов
- Введение в систему прав доступа
- Просмотр текущих прав доступа с помощью `ls -l`
- Первые примеры использования команды `chmod`

![Выполнение заданий 3-4: mv и введение в chmod](image/commans2.png){#fig-commands2 width=80%}

## Задание 5: Работа с правами доступа

На рисунке @fig-commands3 показано выполнение задания 5:

- Изменение прав доступа с помощью `chmod` в числовом формате
- Изменение прав доступа с помощью `chmod` в символьном формате
- Проверка результатов изменения прав с помощью `ls -l`
- Практические примеры установки различных комбинаций прав доступа

![Выполнение задания 5: работа с chmod](image/commans3.png){#fig-commands3 width=80%}

## Практические примеры

В ходе выполнения лабораторной работы были отработаны следующие команды:

```bash
# Копирование файлов
cp file1.txt file2.txt
cp -r directory1 directory2

# Перемещение и переименование
mv oldname.txt newname.txt
mv file.txt /path/to/destination/

# Изменение прав доступа
chmod 755 script.sh
chmod u+x program
chmod go-w file.txt
chmod a+r document.txt
```

# Выводы

В ходе выполнения лабораторной работы были успешно достигнуты следующие результаты:

1. ✅ Изучен синтаксис и основные опции команды `cp` для копирования файлов и директорий
2. ✅ Освоена команда `mv` для перемещения и переименования файлов
3. ✅ Изучена система прав доступа в Linux (rwx для user, group, others)
4. ✅ Практиковано использование команды `chmod` в числовом и символьном форматах
5. ✅ Выполнены практические упражнения, демонстрирующие работу всех трех команд

Получены важные навыки работы с файловой системой Linux, включая копирование, перемещение файлов и управление правами доступа. Команды `cp`, `mv` и `chmod` являются одними из самых полезных и часто используемых инструментов в Linux для повседневной работы системного администратора и разработчика.

# Список литературы{.unnumbered}

::: {#refs}
- Linux Command Line Basics: [https://ubuntu.com/tutorials/command-line-for-beginners](https://ubuntu.com/tutorials/command-line-for-beginners)
- GNU Coreutils Manual: [https://www.gnu.org/software/coreutils/manual/](https://www.gnu.org/software/coreutils/manual/)
- Linux File Permissions: [https://www.linux.com/training-tutorials/understanding-linux-file-permissions/](https://www.linux.com/training-tutorials/understanding-linux-file-permissions/)
- Bash Manual: [https://www.gnu.org/software/bash/manual/](https://www.gnu.org/software/bash/manual/)
:::
