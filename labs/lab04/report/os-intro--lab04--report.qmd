---
## Author
author:
  name: Mohamed Musa
  student_number: "1032248286"
  group: "НКАбд-05"
  year: "2 год"
  email: "1032248286@pfur.ru"
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 19

## Title
title: "Лабораторная работа №4"
subtitle: "Настройка современного окружения разработки"
license: "CC BY"
---

# Цель работы

Изучить процесс настройки современного окружения разработки с использованием pnpm, commitizen и conventional commits для управления проектами.

# Задание

1. Настроить проект с использованием pnpm package manager
2. Сконфигурировать commitizen для conventional commits
3. Создать package.json с необходимыми зависимостями
4. Настроить автоматическое управление changelog
5. Создать git репозиторий и выполнить первоначальную настройку

# Теоретическое введение

Современная разработка программного обеспечения требует использования специализированных инструментов для управления зависимостями, контроля версий и документирования изменений.

**pnpm** - это эффективный менеджер пакетов для Node.js, который использует символьные ссылки для экономии дискового пространства и ускорения установки зависимостей.

**Commitizen** - инструмент для создания коммитов с соблюдением conventional commits спецификации, которая обеспечивает единообразие сообщений коммитов.

**Conventional Commits** - спецификация для создания понятных сообщений коммитов с автоматическим семантическим версионированием.

# Выполнение лабораторной работы

## Установка и настройка pnpm

В начале работы был установлен pnpm package manager. На рисунке @fig-pnpm показан процесс настройки проекта с использованием pnpm.

![Установка и настройка pnpm](image/pnpm.png){#fig-pnpm width=80%}

## Создание package.json

Был создан файл package.json с необходимой конфигурацией проекта:

```json
{
  "name": "git-extended",
  "version": "1.0.0",
  "description": "Git repo for educational purposes",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "Mohamed Musa 1032248286@rudn.ru",
  "license": "ISC",
  "packageManager": "pnpm@9.0",
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}
```

Файл package.json показан на рисунке @fig-package-json.

![Конфигурация package.json](image/package.json.png){#fig-package-json width=80%}

## Установка commitizen

Была выполнена установка commitizen с использованием pnpm для создания conventional commits:

```bash
pnpm add -g commitizen
pnpm add -D cz-conventional-changelog
```

Процесс установки показан на рисунке @fig-commitzen.

![Установка commitizen](image/commitzen.png){#fig-commitzen width=80%}

## Создание первого релиза

Был создан первый релиз проекта с использованием стандартных команд git и npm. На рисунке @fig-release показан процесс создания первого релиза.

![Создание первого релиза](image/first release.png){#fig-release width=80%}

## Работа с changelog

Были выполнены операции по добавлению записей в changelog и управлению версиями проекта. Процесс работы с changelog показан на рисунке @fig-changelog.

![Управление changelog](image/changelog.png){#fig-changelog width=80%}

Дополнительные операции по добавлению в changelog показаны на рисунке @fig-add-changelog.

![Добавление в changelog](image/addChangelog.png){#fig-add-changelog width=80%}

## Выполнение коммитов

В ходе работы было выполнено несколько коммитов с использованием настроенного commitizen. Процесс создания коммитов показан на рисунке @fig-commits.

![Создание коммитов с commitizen](image/commits.png){#fig-commits width=80%}

# Выводы

В ходе лабораторной работы были успешно выполнены следующие задачи:

1. ✅ Установлен и настроен pnpm package manager
2. ✅ Создан проект git-extended с правильной конфигурацией package.json
3. ✅ Настроен commitizen для conventional commits
4. ✅ Выполнены операции с git (add, commit, push)
5. ✅ Создан и обновлен changelog проекта
6. ✅ Выполнен первый релиз проекта

Получены практические навыки работы с современными инструментами разработки: pnpm для управления зависимостями, commitizen для стандартизированных коммитов и conventional commits для лучшей организации процесса разработки.

# Список литературы{.unnumbered}

::: {#refs}
- pnpm Documentation: [https://pnpm.io/](https://pnpm.io/)
- Commitizen: [https://commitizen-tools.github.io/commitizen/](https://commitizen-tools.github.io/commitizen/)
- Conventional Commits: [https://conventionalcommits.org/](https://conventionalcommits.org/)
- Node.js Package Management: [https://nodejs.org/en/learn/getting-started/an-introduction-to-the-npm-package-lifecycle](https://nodejs.org/en/learn/getting-started/an-introduction-to-the-npm-package-lifecycle)
:::
