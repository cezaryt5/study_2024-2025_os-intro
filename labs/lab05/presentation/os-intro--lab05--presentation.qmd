---
## Author
author:
  name: Mohamed Musa
  student_number: "1032248286"
  group: "НКАбд-05"
  year: "2 год"
  email: "1032248286@pfur.ru"
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 19
## Title
title: "Лабораторная работа №5"
subtitle: "Управление dotfiles и паролями с помощью chezmoi и pass"
license: CC BY
date: today
date-format: "YYYY-MM-DD"
---

# Информация

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

  * Mohamed Musa
  * Студент группы НКАбд-05-24
  * Студенческий билет: 1032248286
  * Российский университет дружбы народов
  * [1032248286@pfur.ru](mailto:1032248286@pfur.ru)

:::
::: {.column width="30%"}



:::
::::::::::::::

# Вводная часть

## Актуальность

- Управление конфигурационными файлами критически важно для разработчиков
- Синхронизация настроек между разными системами экономит время
- Безопасное хранение паролей — основа информационной безопасности
- Современные инструменты автоматизируют управление dotfiles и паролями

## Объект и предмет исследования

- Инструменты управления dotfiles (chezmoi)
- Системы безопасного хранения паролей (pass)
- Шифрование данных с помощью GPG
- Синхронизация конфигураций через Git

## Цели и задачи

- Настроить chezmoi для управления dotfiles
- Создать git репозиторий для конфигурационных файлов
- Настроить pass для безопасного хранения паролей
- Сконфигурировать GPG для шифрования
- Синхронизировать dotfiles между системами

## Материалы и методы

- **Chezmoi** — инструмент управления dotfiles
- **Pass** — менеджер паролей с GPG шифрованием
- **GPG** — система шифрования и цифровой подписи
- **Git** — система контроля версий для синхронизации

# Теоретические сведения

## Что такое Chezmoi?

**Chezmoi** — инструмент для управления dotfiles:

::: incremental

- Отслеживает изменения в конфигурационных файлах
- Синхронизирует настройки между разными системами
- Использует Git для версионного контроля
- Поддерживает шаблоны и условную логику

:::

## Что такое Pass?

**Pass (Password Store)** — менеджер паролей:

::: incremental

- Использует GPG для шифрования каждого пароля
- Хранит пароли в отдельных файлах
- Интегрируется с Git для синхронизации
- Простой интерфейс командной строки

:::

## GPG (GNU Privacy Guard)

**GPG** — инструмент шифрования:

::: incremental

- Совместим со стандартом OpenPGP
- Используется для шифрования и цифровой подписи
- Поддерживает асимметричное шифрование
- Основа безопасности для pass

:::

# Выполнение работы

## Установка и настройка chezmoi

Инициализация chezmoi для управления dotfiles:

```bash
chezmoi init https://github.com/ceazyr5/dotfiles.git
```

Основные команды:

- `chezmoi add <file>` — добавить файл под управление
- `chezmoi edit <file>` — редактировать файл
- `chezmoi apply` — применить изменения

## Настройка chezmoi (скриншот)

![Настройка chezmoi для управления dotfiles](image/chezmoi.png){width=80%}

## Работа с pass

Установка и настройка pass для управления паролями:

```bash
gpg --full-generate-key
pass init "ceazer"
pass git init
```

## Настройка pass (скриншот)

![Настройка pass для управления паролями](image/pass.png){width=80%}

## Генерация GPG ключей

Создание GPG ключей для шифрования:

```bash
gpg --full-generate-key
```

Параметры:

- Тип ключа: RSA and RSA
- Размер ключа: 4096 бит
- Срок действия: 0 (без ограничений)
- Имя и email

## Инициализация password store

Инициализация хранилища паролей:

```bash
pass init "ceazer"
pass git init
```

Создание удаленного репозитория:

```bash
pass git remote add origin git@github.com:ceazyr5/password-store.git
```

## Синхронизация dotfiles

Отправка dotfiles в удаленный репозиторий:

```bash
chezmoi cd
git add .
git commit -m "Update dotfiles"
git push
```

## Синхронизация dotfiles (скриншот)

![Синхронизация dotfiles](image/push.png){width=80%}

## Загрузка dotfiles

Загрузка dotfiles из удаленного репозитория:

```bash
chezmoi init https://github.com/ceazyr5/dotfiles.git
chezmoi apply
```

## Загрузка dotfiles (скриншот)

![Загрузка dotfiles из репозитория](image/download.png){width=80%}

## Настройка удаленного репозитория для паролей

Настройка синхронизации паролей:

```bash
pass git remote add origin git@github.com:ceazyr5/password-store.git
pass git push -u origin master
```

## Удаленный репозиторий для паролей (скриншот)

![Настройка удаленного репозитория для паролей](image/pass_remote.png){width=80%}

## Обработка ошибок

В процессе работы могут возникать ошибки:

::: incremental

- Проблемы с правами доступа к GPG ключам
- Конфликты при синхронизации через Git
- Ошибки инициализации репозиториев
- Проблемы с SSH ключами

:::

## Обработка ошибок (скриншот)

![Обработка ошибок в процессе настройки](image/errors.png){width=80%}

# Результаты

## Достигнутые результаты

::: incremental

- ✅ Установлен и настроен chezmoi для управления dotfiles
- ✅ Создан git репозиторий для синхронизации конфигурационных файлов
- ✅ Настроен pass для безопасного хранения паролей
- ✅ Созданы GPG ключи для шифрования
- ✅ Выполнена синхронизация dotfiles между системами
- ✅ Настроено управление паролями с версионным контролем

:::

## Полученные навыки

::: incremental

- Управление конфигурационными файлами с помощью chezmoi
- Безопасное хранение паролей с использованием pass
- Работа с GPG для шифрования данных
- Синхронизация настроек через Git
- Автоматизация управления окружением разработки

:::

# Заключение

## Выводы

Освоены современные инструменты управления конфигурацией:

::: incremental

- Chezmoi упрощает управление dotfiles и синхронизацию между системами
- Pass обеспечивает безопасное хранение паролей с GPG шифрованием
- Git позволяет версионировать и синхронизировать настройки
- Полученные навыки применимы в повседневной работе разработчика
- Автоматизация управления конфигурацией повышает продуктивность

:::

## Практическое применение

Изученные технологии используются для:

- Быстрой настройки новых рабочих станций
- Синхронизации настроек между домашним и рабочим компьютером
- Безопасного хранения учетных данных
- Версионирования конфигурационных файлов
- Совместного использования настроек в команде
