---
## Author
author:
  name: Mohamed Musa
  student_number: "1032248286"
  group: "НКАбд-05-24"
  year: "2 год"
  email: "1032248286@pfur.ru"
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 19

## Title
title: "Индивидуальный проект. Этап 5"
subtitle: "Добавление персональных проектов"
license: "CC BY"
---

# Цель работы

Добавить на персональный сайт информацию о персональных проектах. Создать пост по прошедшей неделе и тематический пост о языках научного программирования.

# Задание

1. Сделать записи для персональных проектов
2. Сделать пост по прошедшей неделе
3. Добавить пост на тему: Языки научного программирования

# Теоретическое введение

## Проекты в Hugo Academic

Hugo Academic позволяет создавать страницы проектов через директорию `content/project/`. Каждый проект — отдельная папка с файлом `index.md`.

Структура проекта:
```
content/project/
├── project-name/
│   ├── index.md
│   └── featured.png (опционально)
```

Frontmatter проекта:
```yaml
---
title: "Название проекта"
summary: "Краткое описание"
tags: ["tag1", "tag2"]
date: 2024-10-28
external_link: ""
image:
  caption: "Описание изображения"
  focal_point: Smart
---
```

## Языки научного программирования

Языки научного программирования используются для:
- Численных расчетов
- Анализа данных
- Визуализации
- Машинного обучения
- Моделирования

### Основные языки

| Язык | Область применения | Особенности |
|------|-------------------|-------------|
| **Python** | Универсальный, ML, Data Science | Простой синтаксис, богатые библиотеки |
| **R** | Статистика, анализ данных | Специализирован для статистики |
| **MATLAB** | Инженерные расчеты, моделирование | Коммерческий, мощные инструменты |
| **Julia** | Высокопроизводительные вычисления | Скорость C, простота Python |
| **Fortran** | Численные методы, физика | Высокая производительность |
| **C++** | Высокопроизводительные вычисления | Контроль над памятью |

: Языки научного программирования {#tbl-languages}

### Python для науки

Основные библиотеки:
- **NumPy** — работа с массивами и матрицами
- **SciPy** — научные вычисления
- **Pandas** — анализ данных
- **Matplotlib** — визуализация
- **Scikit-learn** — машинное обучение
- **TensorFlow/PyTorch** — глубокое обучение

### R для статистики

Преимущества:
- Встроенные статистические функции
- Пакеты для любых статистических методов
- ggplot2 для визуализации
- RStudio IDE

### Julia

Особенности:
- JIT-компиляция для высокой скорости
- Синтаксис похож на Python/MATLAB
- Множественная диспетчеризация
- Интеграция с C, Fortran, Python

# Выполнение работы

## Шаг 1: Создание персональных проектов

Создал несколько проектов в директории `content/project/`:

### Проект 1: Персональный сайт

Создал `content/project/personal-website/index.md`:

```markdown
---
title: "Персональный сайт на Hugo"
summary: "Создание и развертывание персонального сайта с использованием Hugo Academic и GitHub Pages"
tags: ["Hugo", "Web", "GitHub Pages"]
date: 2024-10-01
external_link: ""
---

## Описание

Персональный академический сайт, созданный с использованием генератора статических сайтов Hugo и темы Academic (Wowchemy).

## Технологии

- Hugo (генератор статических сайтов)
- Hugo Academic Theme
- GitHub Pages (хостинг)
- Git (контроль версий)
- Markdown (контент)

## Функциональность

- Информация о себе (биография, образование, навыки)
- Достижения и опыт
- Блог с постами
- Ссылки на научные профили
- Адаптивный дизайн

## Ссылка

https://cezaryt5.github.io
```

### Проект 2: Лабораторные работы по ОС

Создал `content/project/os-labs/index.md`:

```markdown
---
title: "Лабораторные работы по операционным системам"
summary: "Выполнение лабораторных работ по курсу 'Операционные системы' в РУДН"
tags: ["Linux", "Bash", "OS"]
date: 2024-09-01
external_link: ""
---

## Описание

Серия лабораторных работ по изучению операционных систем на базе Linux.

## Темы

1. Установка и настройка ОС
2. Работа с файловой системой
3. Управление пользователями и правами доступа
4. Процессы и управление ими
5. Bash-скриптинг
6. Текстовые редакторы (vi, emacs)
7. Командная оболочка
8. Регулярные выражения
9. Программирование на C
10. Системы контроля версий (Git)

## Технологии

- Linux (Rocky/Fedora)
- Bash
- Git/GitHub
- C programming
- Quarto (для отчетов)
- Markdown

## Репозиторий

https://github.com/cezaryt5/study_2024-2025_os-intro
```

### Проект 3: Изучение Python

Создал `content/project/python-learning/index.md`:

```markdown
---
title: "Изучение Python для Data Science"
summary: "Освоение Python и библиотек для анализа данных и машинного обучения"
tags: ["Python", "Data Science", "ML"]
date: 2024-09-01
external_link: ""
---

## Описание

Самостоятельное изучение Python и его применения в Data Science и машинном обучении.

## Изучаемые темы

- Основы Python
- NumPy для работы с массивами
- Pandas для анализа данных
- Matplotlib и Seaborn для визуализации
- Scikit-learn для машинного обучения
- Jupyter Notebook

## Проекты

- Анализ датасетов
- Визуализация данных
- Построение моделей ML
- Обработка естественного языка

## Ресурсы

- Python.org
- Kaggle
- Coursera
- GitHub
```

## Шаг 2: Активация виджета Projects

Отредактировал `content/home/projects.md`:

```yaml
---
widget: portfolio
headless: true
active: true
weight: 65

title: Проекты
subtitle: ''

content:
  page_type: project
  filter_default: 0
  filter_button:
  - name: Все
    tag: '*'
  - name: Web
    tag: Web
  - name: Linux
    tag: Linux
  - name: Python
    tag: Python

design:
  columns: '2'
  view: 2
  flip_alt_rows: false
---
```

## Шаг 3: Создание поста о прошедшей неделе

Создал `content/post/week-post-4/index.md`:

```markdown
---
title: "Пост по прошедшей неделе (неделя 4)"
date: 2024-11-04
---

На этой неделе я добавил на сайт ссылки на научные и
библиометрические ресурсы: ORCID, Google Scholar, ResearchGate
и другие. Настроил отображение иконок с использованием
Academicons.

Также создал раздел с персональными проектами, где разместил
информацию о создании сайта, лабораторных работах по ОС и
изучении Python. Написал пост об оформлении отчетов.

Продолжаю изучать возможности Hugo Academic и улучшать
структуру сайта.
```

## Шаг 4: Создание тематического поста

Создал `content/post/scientific-programming/index.md`:

```markdown
---
title: "Языки научного программирования"
date: 2024-11-04
---

## Введение

Научное программирование — область разработки ПО для решения
научных и инженерных задач. Языки научного программирования
оптимизированы для численных расчетов, анализа данных и
моделирования.

## Python

### Почему Python популярен в науке?

1. **Простота изучения** — понятный синтаксис
2. **Богатая экосистема** — тысячи библиотек
3. **Jupyter Notebook** — интерактивная разработка
4. **Сообщество** — огромное количество ресурсов

### Основные библиотеки

#### NumPy
Работа с многомерными массивами:
```python
import numpy as np

# Создание массива
arr = np.array([1, 2, 3, 4, 5])

# Математические операции
mean = np.mean(arr)
std = np.std(arr)

# Линейная алгебра
matrix = np.array([[1, 2], [3, 4]])
inverse = np.linalg.inv(matrix)
```

#### Pandas
Анализ данных:
```python
import pandas as pd

# Чтение данных
df = pd.read_csv('data.csv')

# Статистика
print(df.describe())

# Фильтрация
filtered = df[df['age'] > 25]

# Группировка
grouped = df.groupby('category').mean()
```

#### Matplotlib
Визуализация:
```python
import matplotlib.pyplot as plt

# Линейный график
plt.plot(x, y)
plt.xlabel('X axis')
plt.ylabel('Y axis')
plt.title('My Plot')
plt.show()

# Гистограмма
plt.hist(data, bins=20)
plt.show()
```

#### Scikit-learn
Машинное обучение:
```python
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Разделение данных
X_train, X_test, y_train, y_test = train_test_split(X, y)

# Обучение модели
model = LinearRegression()
model.fit(X_train, y_train)

# Предсказание
predictions = model.predict(X_test)
```

## R

### Преимущества R

- Создан специально для статистики
- Встроенные статистические функции
- Отличная визуализация (ggplot2)
- RStudio IDE

### Пример кода

```r
# Загрузка данных
data <- read.csv("data.csv")

# Статистика
summary(data)
mean(data$column)
sd(data$column)

# Визуализация с ggplot2
library(ggplot2)
ggplot(data, aes(x=x, y=y)) +
  geom_point() +
  geom_smooth(method="lm") +
  theme_minimal()

# Статистические тесты
t.test(data$group1, data$group2)
cor.test(data$x, data$y)
```

## Julia

### Особенности Julia

- **Скорость** — производительность как у C
- **Простота** — синтаксис как у Python
- **JIT-компиляция** — оптимизация во время выполнения
- **Множественная диспетчеризация** — мощная система типов

### Пример кода

```julia
# Функция
function fibonacci(n)
    if n <= 2
        return 1
    else
        return fibonacci(n-1) + fibonacci(n-2)
    end
end

# Работа с массивами
A = [1 2 3; 4 5 6; 7 8 9]
B = A * A'

# Параллельные вычисления
using Distributed
@distributed (+) for i in 1:1000000
    rand()
end
```

## MATLAB

### Применение

- Инженерные расчеты
- Обработка сигналов
- Системы управления
- Моделирование

### Особенности

- Коммерческий продукт
- Мощные встроенные инструменты
- Simulink для моделирования
- Toolboxes для специализированных задач

### Пример

```matlab
% Создание матрицы
A = [1 2 3; 4 5 6; 7 8 9];

% Операции
B = A * A';
eigenvalues = eig(A);

% Визуализация
x = linspace(0, 2*pi, 100);
y = sin(x);
plot(x, y);
title('Sine Wave');
```

## Сравнение языков

| Критерий | Python | R | Julia | MATLAB |
|----------|--------|---|-------|--------|
| Скорость | Средняя | Средняя | Высокая | Высокая |
| Простота | ★★★★★ | ★★★★☆ | ★★★★☆ | ★★★★☆ |
| Библиотеки | ★★★★★ | ★★★★★ | ★★★☆☆ | ★★★★★ |
| Стоимость | Бесплатно | Бесплатно | Бесплатно | Платно |
| ML/AI | ★★★★★ | ★★★★☆ | ★★★☆☆ | ★★★★☆ |
| Статистика | ★★★★☆ | ★★★★★ | ★★★★☆ | ★★★★☆ |

## Выбор языка

### Выбирайте Python если:
- Начинаете изучать программирование
- Нужна универсальность
- Работаете с ML/AI
- Нужна интеграция с веб-приложениями

### Выбирайте R если:
- Фокус на статистике
- Работаете с биоинформатикой
- Нужна продвинутая визуализация
- Используете специфические статистические методы

### Выбирайте Julia если:
- Нужна высокая производительность
- Работаете с большими данными
- Пишете численные алгоритмы
- Хотите современный язык

### Выбирайте MATLAB если:
- Работаете в инженерной области
- Нужны специализированные toolboxes
- Используете Simulink
- Есть бюджет на лицензию

## Заключение

Выбор языка зависит от задачи, опыта и доступных ресурсов.
Python — отличный выбор для начала благодаря простоте и
универсальности. R незаменим для статистики. Julia — будущее
высокопроизводительных вычислений. MATLAB — стандарт в
инженерии.

Многие ученые используют несколько языков в зависимости от
задачи. Главное — понимать сильные стороны каждого языка.
```

## Шаг 5: Генерация и развертывание

После внесения всех изменений выполнил:

```bash
hugo
cd public
git add .
git commit -m "Add personal projects and posts"
git push
```

# Выводы

В ходе выполнения пятого этапа индивидуального проекта были успешно выполнены следующие задачи:

1. ✅ Созданы записи для 3 персональных проектов
2. ✅ Активирован виджет Projects на сайте
3. ✅ Создан пост по прошедшей неделе
4. ✅ Создан подробный пост о языках научного программирования

Персональный сайт дополнен разделом с проектами, демонстрирующим практический опыт.

Получены практические навыки:
- Создания страниц проектов в Hugo
- Настройки виджета Portfolio
- Сравнительного анализа языков программирования
- Написания технического контента

# Список литературы{.unnumbered}

::: {#refs}
- Hugo Documentation: https://gohugo.io/documentation/
- Python for Data Science: https://www.python.org/
- R Project: https://www.r-project.org/
- Julia Language: https://julialang.org/
:::
